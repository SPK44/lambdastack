
# lambdastack.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "SVAR NAME HEX BYTE CHAR SQ DQ I O\n    prog : instr_list\n    \n    instr_list : instr instr_list\n               | empty\n    \n    instr : '?'\n          | SQ\n          | DQ\n          | I\n          | O\n          | '`' var\n    \n    instr : HEX\n          | BYTE\n          | CHAR\n    \n    instr : var\n          | lambda\n    \n    var : NAME\n        | SVAR\n        | '%'\n    \n    var_list : var var_list\n             | var\n    \n    lambda : '[' var_list ':' instr_list ']'\n           | '[' instr_list ']'\n    \n    empty :\n    "
    
_lr_action_items = {'?':([0,3,5,6,7,8,9,11,12,13,14,15,16,17,18,19,21,24,25,26,30,],[5,5,-4,-5,-6,-7,-8,-13,-10,-11,-12,-14,-15,-16,-17,5,-9,-13,5,-21,-20,]),'SQ':([0,3,5,6,7,8,9,11,12,13,14,15,16,17,18,19,21,24,25,26,30,],[6,6,-4,-5,-6,-7,-8,-13,-10,-11,-12,-14,-15,-16,-17,6,-9,-13,6,-21,-20,]),'DQ':([0,3,5,6,7,8,9,11,12,13,14,15,16,17,18,19,21,24,25,26,30,],[7,7,-4,-5,-6,-7,-8,-13,-10,-11,-12,-14,-15,-16,-17,7,-9,-13,7,-21,-20,]),'I':([0,3,5,6,7,8,9,11,12,13,14,15,16,17,18,19,21,24,25,26,30,],[8,8,-4,-5,-6,-7,-8,-13,-10,-11,-12,-14,-15,-16,-17,8,-9,-13,8,-21,-20,]),'O':([0,3,5,6,7,8,9,11,12,13,14,15,16,17,18,19,21,24,25,26,30,],[9,9,-4,-5,-6,-7,-8,-13,-10,-11,-12,-14,-15,-16,-17,9,-9,-13,9,-21,-20,]),'`':([0,3,5,6,7,8,9,11,12,13,14,15,16,17,18,19,21,24,25,26,30,],[10,10,-4,-5,-6,-7,-8,-13,-10,-11,-12,-14,-15,-16,-17,10,-9,-13,10,-21,-20,]),'HEX':([0,3,5,6,7,8,9,11,12,13,14,15,16,17,18,19,21,24,25,26,30,],[12,12,-4,-5,-6,-7,-8,-13,-10,-11,-12,-14,-15,-16,-17,12,-9,-13,12,-21,-20,]),'BYTE':([0,3,5,6,7,8,9,11,12,13,14,15,16,17,18,19,21,24,25,26,30,],[13,13,-4,-5,-6,-7,-8,-13,-10,-11,-12,-14,-15,-16,-17,13,-9,-13,13,-21,-20,]),'CHAR':([0,3,5,6,7,8,9,11,12,13,14,15,16,17,18,19,21,24,25,26,30,],[14,14,-4,-5,-6,-7,-8,-13,-10,-11,-12,-14,-15,-16,-17,14,-9,-13,14,-21,-20,]),'$end':([0,1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,20,21,26,30,],[-22,0,-1,-22,-3,-4,-5,-6,-7,-8,-13,-10,-11,-12,-14,-15,-16,-17,-2,-9,-21,-20,]),'NAME':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,24,25,26,27,30,],[16,16,-4,-5,-6,-7,-8,16,-13,-10,-11,-12,-14,-15,-16,-17,16,-9,16,16,-21,16,-20,]),'SVAR':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,24,25,26,27,30,],[17,17,-4,-5,-6,-7,-8,17,-13,-10,-11,-12,-14,-15,-16,-17,17,-9,17,17,-21,17,-20,]),'%':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,24,25,26,27,30,],[18,18,-4,-5,-6,-7,-8,18,-13,-10,-11,-12,-14,-15,-16,-17,18,-9,18,18,-21,18,-20,]),'[':([0,3,5,6,7,8,9,11,12,13,14,15,16,17,18,19,21,24,25,26,30,],[19,19,-4,-5,-6,-7,-8,-13,-10,-11,-12,-14,-15,-16,-17,19,-9,-13,19,-21,-20,]),']':([3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,29,30,],[-22,-3,-4,-5,-6,-7,-8,-13,-10,-11,-12,-14,-15,-16,-17,-22,-2,-9,26,-13,-22,-21,30,-20,]),':':([16,17,18,22,24,27,28,],[-15,-16,-17,25,-19,-19,-18,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'prog':([0,],[1,]),'instr_list':([0,3,19,25,],[2,20,23,29,]),'instr':([0,3,19,25,],[3,3,3,3,]),'empty':([0,3,19,25,],[4,4,4,4,]),'var':([0,3,10,19,24,25,27,],[11,11,21,24,27,11,27,]),'lambda':([0,3,19,25,],[15,15,15,15,]),'var_list':([19,24,27,],[22,28,28,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> instr_list','prog',1,'p_prog','lambdastack_interp_gram.py',7),
  ('instr_list -> instr instr_list','instr_list',2,'p_instr_list','lambdastack_interp_gram.py',13),
  ('instr_list -> empty','instr_list',1,'p_instr_list','lambdastack_interp_gram.py',14),
  ('instr -> ?','instr',1,'p_literal_instr','lambdastack_interp_gram.py',24),
  ('instr -> SQ','instr',1,'p_literal_instr','lambdastack_interp_gram.py',25),
  ('instr -> DQ','instr',1,'p_literal_instr','lambdastack_interp_gram.py',26),
  ('instr -> I','instr',1,'p_literal_instr','lambdastack_interp_gram.py',27),
  ('instr -> O','instr',1,'p_literal_instr','lambdastack_interp_gram.py',28),
  ('instr -> ` var','instr',2,'p_literal_instr','lambdastack_interp_gram.py',29),
  ('instr -> HEX','instr',1,'p_data_instr','lambdastack_interp_gram.py',49),
  ('instr -> BYTE','instr',1,'p_data_instr','lambdastack_interp_gram.py',50),
  ('instr -> CHAR','instr',1,'p_data_instr','lambdastack_interp_gram.py',51),
  ('instr -> var','instr',1,'p_through_instr','lambdastack_interp_gram.py',57),
  ('instr -> lambda','instr',1,'p_through_instr','lambdastack_interp_gram.py',58),
  ('var -> NAME','var',1,'p_var','lambdastack_interp_gram.py',64),
  ('var -> SVAR','var',1,'p_var','lambdastack_interp_gram.py',65),
  ('var -> %','var',1,'p_var','lambdastack_interp_gram.py',66),
  ('var_list -> var var_list','var_list',2,'p_var_list','lambdastack_interp_gram.py',72),
  ('var_list -> var','var_list',1,'p_var_list','lambdastack_interp_gram.py',73),
  ('lambda -> [ var_list : instr_list ]','lambda',5,'p_lambda','lambdastack_interp_gram.py',82),
  ('lambda -> [ instr_list ]','lambda',3,'p_lambda','lambdastack_interp_gram.py',83),
  ('empty -> <empty>','empty',0,'p_empty','lambdastack_interp_gram.py',93),
]
